### variable definitions

# Use Alt for mod key
    set $mod Mod1

# Default terminal = foot
    set $term foot

# sway menu

    set $rofi_cmd rofi -terminal '$term'
    set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi

# lock / screen timeouts

    # 20 minute lock timeout
    set $lock_timeout 1200

    # 10 minutes after lock timeout, turn the displays off
    set $screen_timeout 600

# Displays

    # laptop display
    set $laptop eDP-1

    # dell displays
    set $dellMon1 "Dell Inc. DELL U2722DE 2NR7GH3"
    set $dellMon2 "Dell Inc. DELL U2722DE 4SR7GH3"

    # set monitor variables
    set $mon1 {% if work %}$dellMon1{% else %}DP-3{% endif +%}
    set $mon2 {% if work %}$dellMon2{% else %}DP-4{% endif +%}

# Workspace names

    set $ws1 1: Scratch
    set $ws2 2: Scratch
    set $ws3 3: Scratch
    set $ws4 4: Scratch
    set $ws5 5: Slack / Notes / Terminals
    set $ws6 6: Firefox / Mail
    set $ws7 7: VS Code
    set $ws8 8: Scratch
    set $ws9 9: Scratch
    set $ws10 10:Meetings
    set $wsF1 F1: Scratch
    set $wsF2 F2: Scratch
    set $wsF3 F3: Scratch
    set $wsF4 F4: Scratch
    set $wsF5 F5: Scratch
    set $wsF6 F6: Scratch
    set $wsF7 F7: Scratch
    set $wsF8 F8: Scratch
    set $wsF9 F9: Scratch
    set $wsF10 F10: Scratch
    set $wsF11 F11: Scratch
    set $wsF12 F12: Scratch

### Workspace bindings

    workspace $ws1 output $mon1
    workspace $ws2 output $mon1
    workspace $ws3 output $mon1
    workspace $ws4 output $mon1
    workspace $ws5 output $mon1
    workspace $ws6 output $mon2
    workspace $ws7 output $mon2
    workspace $ws8 output $mon2
    workspace $ws9 output $mon2
    workspace $ws10 output $mon2

    # main left workspace (joplin/remote-viewer/citrix/slack)
    assign [class="^Joplin$"] $ws5
    assign [app_id="remote-viewer"] $ws5
    assign [class="^Slack$"] $ws5
    assign [class="^Wfica$"] $ws5

    # main right workspace (firefox/email)
    assign [app_id="^firefox$"] $ws6
    assign [app_id="^evolution$"] $ws6
    assign [class="^thunderbird"] $ws6

    # VS code to right monitor
    assign [class="^Code$"] $ws7

    # Make VS Code 1920x1080 for OBS
    # for_window [class="^Code$"] floating enable, resize set width 1920px, resize set height 1080px

    # zoom/slack huddles
    assign [class="^Slack$" title="^Huddle"] $ws10
    assign [class="^zoom$"] $ws10
    for_window [class="^zoom$" title="Settings"] floating enable, border pixel

### global configuration

# default font
    font pango:Source Code Pro Medium 16

# remove window titlebars
    default_border pixel 2

# window gaps
    gaps inner 6
    gaps outer 2

### Output configuration

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
    output * bg /usr/share/backgrounds/default.png fill

# scale laptop's tiny display by 33%
    output $laptop scale 1.33

# set position of Dell work monitors
    output $dellMon1 pos 0 0
    output $dellMon2 pos 2560 0

# enable clamshell mode
    bindswitch --reload --locked lid:on output $laptop disable
    bindswitch --reload --locked lid:off output $laptop enable
    exec_always {{ config_home_dir }}/.local/bin/clamshell.sh

# touchpad config
# disable while typing / tap to touch / three finger middle click
    input "type:touchpad" {
        dwt enabled
        tap enabled
        middle_emulation enabled
    }

    input "type:keyboard" {
        xkb_numlock enabled
    }

### Key bindings

# Start a terminal
    bindsym $mod+Return exec $term

# Kill focused window
    bindsym $mod+Shift+q kill

# Start your launcher
    bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
    floating_modifier $mod normal

# Reload the configuration file
    bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    bindsym $mod+F1 workspace $wsF1
    bindsym $mod+F2 workspace $wsF2
    bindsym $mod+F3 workspace $wsF3
    bindsym $mod+F4 workspace $wsF4
    bindsym $mod+F5 workspace $wsF5
    bindsym $mod+F6 workspace $wsF6
    bindsym $mod+F7 workspace $wsF7
    bindsym $mod+F8 workspace $wsF8
    bindsym $mod+F9 workspace $wsF9
    bindsym $mod+F10 workspace $wsF10
    bindsym $mod+F11 workspace $wsF11
    bindsym $mod+F12 workspace $wsF12

# Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    bindsym $mod+Shift+F1 move container to workspace $wsF1
    bindsym $mod+Shift+F2 move container to workspace $wsF2
    bindsym $mod+Shift+F3 move container to workspace $wsF3
    bindsym $mod+Shift+F4 move container to workspace $wsF4
    bindsym $mod+Shift+F5 move container to workspace $wsF5
    bindsym $mod+Shift+F6 move container to workspace $wsF6
    bindsym $mod+Shift+F7 move container to workspace $wsF7
    bindsym $mod+Shift+F8 move container to workspace $wsF8
    bindsym $mod+Shift+F9 move container to workspace $wsF9
    bindsym $mod+Shift+F10 move container to workspace $wsF10
    bindsym $mod+Shift+F11 move container to workspace $wsF11
    bindsym $mod+Shift+F12 move container to workspace $wsF12

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

# Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

# Make the current focus fullscreen
    bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

# Move focus to the parent container
    bindsym $mod+a focus parent

# Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Resizing containers:
#

    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }

    bindsym $mod+r mode "resize"

#
# Custom keybinds
#

    # lock screen with mod+l
    bindsym --release $mod+Shift+l exec loginctl lock-session

    # Capture the currently active output to clipboard
    bindsym Shift+Print exec grimshot copy output

    # Capture the currently active window to clipboard
    bindsym Shift+Alt+Print exec grimshot copy active

    # Select and capture a custom rectangular area to clipboard
    bindsym Shift+Ctrl+Print exec grimshot copy area

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
    include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'

### autostart applications

workspace 7
exec /usr/share/code/code

workspace 6
exec evolution
exec firefox

workspace 5
exec foot
exec /usr/bin/flatpak run --branch=stable --arch=x86_64 --command=com.slack.Slack --file-forwarding com.slack.Slack
# Don't autostart Joplin -- it really needs pCloud to be initialized first, and we can't guarantee that here
